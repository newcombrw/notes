1. Networking Fundamentals
  I MATHEMATICS OF NETWORKING
    bit - smallest measurement, a 0 or 1
    nibble - 4 bits
    byte - 8 bits
    half word - 16 bits
    word - 32 bits
    dword - 64 bits
  II BASE (N) FORMATS
    Base 2 - 0 or 1, aka binary (0b...)
    Base 10 - 1-10, aka decimal 
    Base 16 - 1-16, aka hexadecimal (0x...)
    Base 64 - 1-64
  III CONVERSION
    Bin->Hex separate into nibbles and add (8421 nibbles)
    Dec->Hex 
  IV ENCAPSULATION/DECAPSULATION
    Encapsulation is the act of packaging a message of data into another protocol. (a packet is wrapped in a frame, for example)
    Decapsulation is the act of stripping the packaging to get the actual data. (a tcp packet is revealed when stripping ip headers, for example)
    Encapsulation occurs when data is being sent to a destination. Decapsulation occurs when data is being received from a destination.
    The destination in question doesn't have to be the final "hop".
  V OSI MODEL
          LAYER           PDU               EXAMPLE
    7 -> Application      Data              HTTP/S,DNS,SSH
    6 -> Presentation     Data              MP4,7ZIP,HTML,SSL/TLS
    5 -> Session          Data              SOCKS,RPC,RTP
    4 -> Transport        Datagram/Segment  TCP/UDP
    3 -> Network          Packet            IPv4/6,IPSEC,ICMP,BGP
    2 -> Data             Frame             802.11,802.3,CABLE
    1 -> Physical         Bits              802.11abgn, COAX/FIBER
    
    Layer 1 - encoding/signaling, data xfer, physical network design
    Layer 2 - MAC/LLC, Defined the "ethernet header" (IEEE 802.3)
      | PREAMBLE 7 byte alternating 1010101 | SFD (1 byte delimiter) | ETHERNET FRAME
      ETHERNET FRAME :::: DMAC (6 Bytes) | SMAC (6 bytes) | (vlan flag? +4bytes) Ethertype (2 bytes) | Payload (46-1500 bytes) | CRC/FCS (4 bytes) 
    Layer 3 - IPv6, IPv6
    Layer 4 - TCP/UDP
  VI
  
  VII SOCKET PROGRAMMING/PACKET CREATION
    Types of sockets: 
      Stream Sockets (string) - connection oriented & sequenced; used with TCP, SCTP, Bluetooth
      Datagram Sockets (dgram) - connectionless. Quick sending/receiving; UDP
      Raw Sockets (raw) - Direct sending/receiving on IP packets without automatic, protocol-specific formatting
      
      Stream & Datagram sockets are in userspace, while Raw sockets are in kernel space... These userspace sockets are
      the most common sockets. They don't require elevated privileges to perform actions, while kernelspace sockets are
      going to attempt to access hardware directly, which prevents encapsulation/decapsulation or create packets from
      scratch.
      
      Userspace is used for high ports when creating a listener, connecting to a listener, using nmap with no switches, or 
      reading files through wireshark/tcpdump. Kernelspace is used for creating listeners on 0-1023, nmap with switches, 
      capturing packets on the wire, or crafting raw sockets or sending raw sockets.
   
   VIII NETWORK RECONNAISSANCE
    1. NMAP SCANS
      TCP Connect (sT) - Sends 3 way handshake and attempts to fully connect to the port
      TCP SYN (sS) -  Sends a SYN packet to each port, and awaits a SYN/ACK. Doesn't connect (RST means the port isn't open, no response = filtered)
      UDP (sU) - used to banner grab UDP listeners.
    2. BANNER GRABBING
      nc x.x.x.x <port you want to banner grab from>
    3A. GRABBING FILES FROM THE HOST
      WGET: Supports HTTP, HTTPS, FTP
        Connect to FTP: wget ftp://x.x.x.x:xxxx -r
        Connect to HTTP/S: x.x.x.x:xxxx -r
    3B. ATTEMPT TO CONNECT TO THE KNOWN PORT
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
